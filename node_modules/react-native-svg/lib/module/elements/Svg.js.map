{"version":3,"sources":["Svg.tsx"],"names":["React","requireNativeComponent","StyleSheet","findNodeHandle","NativeModules","extractResponder","extractViewBox","extractColor","Shape","G","RNSVGSvgViewManager","styles","create","svg","backgroundColor","borderWidth","Svg","measureInWindow","callback","root","measure","measureLayout","relativeToNativeNode","onSuccess","onFail","setNativeProps","props","width","height","bbWidth","bbHeight","toDataURL","options","handle","opacity","viewBox","preserveAspectRatio","style","children","onLayout","stylesAndProps","Array","isArray","Object","assign","color","font","transform","fill","fillOpacity","fillRule","stroke","strokeWidth","strokeOpacity","strokeDasharray","strokeDashoffset","strokeLinecap","strokeLinejoin","strokeMiterlimit","w","parseInt","h","doNotParseWidth","isNaN","length","doNotParseHeight","dimensions","flex","o","opacityStyle","tint","refMethod","displayName","defaultProps","RNSVGSvg"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  requireNativeComponent,\n  StyleSheet,\n  findNodeHandle,\n  NativeModules,\n  MeasureOnSuccessCallback,\n  MeasureLayoutOnSuccessCallback,\n  MeasureInWindowOnSuccessCallback,\n} from 'react-native';\nimport {\n  Color,\n  ClipProps,\n  FillProps,\n  NumberProp,\n  StrokeProps,\n  ResponderProps,\n  TransformProps,\n  ResponderInstanceProps,\n} from '../lib/extract/types';\nimport extractResponder from '../lib/extract/extractResponder';\nimport extractViewBox from '../lib/extract/extractViewBox';\nimport extractColor from '../lib/extract/extractColor';\nimport Shape from './Shape';\nimport G from './G';\n\nconst RNSVGSvgViewManager = NativeModules.RNSVGSvgViewManager;\n\nconst styles = StyleSheet.create({\n  svg: {\n    backgroundColor: 'transparent',\n    borderWidth: 0,\n  },\n});\n\nexport default class Svg extends Shape<\n  {\n    color?: Color;\n    style?: [] | {};\n    viewBox?: string;\n    opacity?: NumberProp;\n    onLayout?: () => void;\n    preserveAspectRatio?: string;\n  } & TransformProps &\n    ResponderProps &\n    StrokeProps &\n    FillProps &\n    ClipProps\n> {\n  static displayName = 'Svg';\n\n  static defaultProps = {\n    preserveAspectRatio: 'xMidYMid meet',\n  };\n\n  measureInWindow = (callback: MeasureInWindowOnSuccessCallback) => {\n    this.root && this.root.measureInWindow(callback);\n  };\n\n  measure = (callback: MeasureOnSuccessCallback) => {\n    this.root && this.root.measure(callback);\n  };\n\n  measureLayout = (\n    relativeToNativeNode: number,\n    onSuccess: MeasureLayoutOnSuccessCallback,\n    onFail: () => void /* currently unused */,\n  ) => {\n    this.root &&\n      this.root.measureLayout(relativeToNativeNode, onSuccess, onFail);\n  };\n\n  setNativeProps = (\n    props: Object & {\n      width?: NumberProp;\n      height?: NumberProp;\n      bbWidth?: NumberProp;\n      bbHeight?: NumberProp;\n    },\n  ) => {\n    const { width, height } = props;\n    if (width) {\n      props.bbWidth = width;\n    }\n    if (height) {\n      props.bbHeight = height;\n    }\n    this.root && this.root.setNativeProps(props);\n  };\n\n  toDataURL = (callback: () => void, options: Object) => {\n    if (!callback) {\n      return;\n    }\n    const handle = findNodeHandle(this.root as Component);\n    RNSVGSvgViewManager.toDataURL(handle, options, callback);\n  };\n\n  render() {\n    const {\n      opacity = 1,\n      viewBox,\n      preserveAspectRatio,\n      style,\n      children,\n      onLayout,\n      ...props\n    } = this.props;\n    const stylesAndProps = {\n      ...(Array.isArray(style) ? Object.assign({}, ...style) : style),\n      ...props,\n    };\n    const {\n      color,\n      width,\n      height,\n\n      // Inherited G properties\n      font,\n      transform,\n      fill,\n      fillOpacity,\n      fillRule,\n      stroke,\n      strokeWidth,\n      strokeOpacity,\n      strokeDasharray,\n      strokeDashoffset,\n      strokeLinecap,\n      strokeLinejoin,\n      strokeMiterlimit,\n    } = stylesAndProps;\n\n    const w = parseInt(width, 10);\n    const h = parseInt(height, 10);\n    const doNotParseWidth = isNaN(w) || width[width.length - 1] === '%';\n    const doNotParseHeight = isNaN(h) || height[height.length - 1] === '%';\n    const dimensions =\n      width && height\n        ? {\n            width: doNotParseWidth ? width : w,\n            height: doNotParseHeight ? height : h,\n            flex: 0,\n          }\n        : null;\n\n    const o = +opacity;\n    const opacityStyle = !isNaN(o)\n      ? {\n          opacity: o,\n        }\n      : null;\n\n    const tint = extractColor(color);\n    return (\n      <RNSVGSvg\n        {...props}\n        bbWidth={width}\n        bbHeight={height}\n        color={tint}\n        tintColor={tint}\n        onLayout={onLayout}\n        ref={this.refMethod}\n        style={[styles.svg, style, opacityStyle, dimensions]}\n        {...extractResponder(props, this as ResponderInstanceProps)}\n        {...extractViewBox({ viewBox, preserveAspectRatio })}\n      >\n        <G\n          {...{\n            children,\n            style,\n            font,\n            transform,\n            fill,\n            fillOpacity,\n            fillRule,\n            stroke,\n            strokeWidth,\n            strokeOpacity,\n            strokeDasharray,\n            strokeDashoffset,\n            strokeLinecap,\n            strokeLinejoin,\n            strokeMiterlimit,\n          }}\n        />\n      </RNSVGSvg>\n    );\n  }\n}\n\nexport const RNSVGSvg = requireNativeComponent('RNSVGSvgView');\n"]}